apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: {{ .Values.mongo.service.name }}
  replicas: {{ .Values.mongo.replicaCount }}
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "dedicated"
                    operator: In
                    values:
                      - database
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "database"
          effect: "NoSchedule"
      containers:
      - name: mongo
        image: "{{ .Values.mongo.image.repository }}:{{ .Values.mongo.image.tag }}"
        imagePullPolicy: {{ .Values.mongo.image.pullPolicy }}
        command:
          - mongod
          - "--replSet=rs0"
          - "--bind_ip_all"
        ports:
        - containerPort: {{ .Values.mongo.service.port }}
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "{{ .Values.mongo.persistence.storageClass }}"
      resources:
        requests:
          storage: {{ .Values.mongo.persistence.size }}
